(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{725:function(t,e,r){"use strict";r.r(e);var v=r(74),c=Object(v.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"docker开源项目背景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker开源项目背景"}},[t._v("#")]),t._v(" Docker开源项目背景")]),t._v(" "),e("p",[t._v("Docker是基于Go语言实现的开源容器项目。它诞生于2013年年初，最初发起者是dotCloud公司。Docker自开源后受到业界广泛的关注和参与，目前已有80多个相关开源组件项目（包括Containerd、Moby、Swarm等），逐渐形成了围绕Docker容器的完整的生态体系。")]),t._v(" "),e("h2",{attrs:{id:"使用docker的好处"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用docker的好处"}},[t._v("#")]),t._v(" 使用Docker的好处")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("更快速地交付与部署")]),t._v("：使用Docker，开发人员可以使用镜像来快速构建一套标准的开发环境；开发完成之后，测试和运维人员可以直接使用完全相同的环境来部署代码。只要是开发测试过的代码，就可以确保在生产环境无缝运行。Docker可以快速创建和删除容器，实现快速迭代，节约开发、测试、部署的大量时间。并且，整个过程全程可见，使团队更容易理解应用的创建和工作过程。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("更高效的资源利用")]),t._v("：运行Docker容器不需要额外的虚拟化管理程序（Virtual Machine Manager, VMM，以及Hypervisor）的支持，Docker是内核级的虚拟化，可以实现更高的性能，同时对资源的额外需求很低。与传统虚拟机方式相比，Docker的性能要提高1～2个数量级。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("更轻松的迁移和扩展")]),t._v("：Docker容器几乎可以在任意的平台上运行，包括物理机、虚拟机、公有云、私有云、个人电脑、服务器等，同时支持主流的操作系统发行版本。这种兼容性让用户可以在不同平台之间轻松地迁移应用。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("更简单的更新管理")]),t._v("：使用Dockerfile，只需要小小的配置修改，就可以替代以往大量的更新工作。所有修改都以增量的方式被分发和更新，从而实现自动化并且高效的容器管理。")])])]),t._v(" "),e("h2",{attrs:{id:"docker与虚拟机比较"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker与虚拟机比较"}},[t._v("#")]),t._v(" Docker与虚拟机比较")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Docker容器很快，启动和停止可以在秒级实现，这相比传统的虚拟机方式（数分钟）要快得多；")])]),t._v(" "),e("li",[e("p",[t._v("Docker容器对系统资源需求很少，一台主机上可以同时运行数千个Docker容器（在IBM服务器上已经实现了同时运行10K量级的容器实例）。")])]),t._v(" "),e("li",[e("p",[t._v("Docker通过类似Git设计理念的操作来方便用户获取、分发和更新应用镜像，存储复用，增量更新。")])]),t._v(" "),e("li",[e("p",[t._v("Docker通过Dockerfile支持灵活的自动化创建和部署机制，以提高工作效率，并标准化流程。")])])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("特性")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("容器")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("虚拟机")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("启动速度")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("秒级")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("分钟级")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("性能")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("接近原生")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("较弱")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("内存代价")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("很小")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("较多")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("硬盘使用")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("一般为MB")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("一般为GB")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("运行密度")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("单机支持上千个容器")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("一般几十个")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("隔离性")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("安全隔离")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("完全隔离")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("迁移性")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("优秀")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("一般")])])])]),t._v(" "),e("h2",{attrs:{id:"docker三大核心概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker三大核心概念"}},[t._v("#")]),t._v(" Docker三大核心概念")]),t._v(" "),e("p",[t._v("Docker的三大核心概念：镜像("),e("code",[t._v("Image")]),t._v(")、容器("),e("code",[t._v("Container")]),t._v(")与仓库("),e("code",[t._v("Repository")]),t._v(")")]),t._v(" "),e("ul",[e("li",[t._v("镜像")])]),t._v(" "),e("p",[e("code",[t._v("Docker")]),t._v("镜像是一个特殊的文件系统，提供容器运行时所需的程序、库、资源、配置等文件，另外还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。")]),t._v(" "),e("p",[t._v("镜像是一个静态的概念，不包含任何动态数据，其内容在构建之后也不会被改变。")]),t._v(" "),e("ul",[e("li",[t._v("容器")])]),t._v(" "),e("p",[t._v("Docker容器类似于一个轻量级的沙箱，Docker利用容器来运行和隔离应用。容器是从镜像创建的应用运行实例。它可以启动、开始、停止、删除，而这些容器都是彼此相互隔离、互不可见的。")]),t._v(" "),e("ul",[e("li",[t._v("仓库")])]),t._v(" "),e("p",[t._v("Docker容器类似于一个轻量级的沙箱，Docker利用容器来运行和隔离应用。容器是从镜像创建的应用运行实例。它可以启动、开始、停止、删除，而这些容器都是彼此相互隔离、互不可见的。")]),t._v(" "),e("p",[t._v("根据所存储的镜像公开分享与否，Docker仓库可以分为公开仓库（Public）和私有仓库（Private）两种形式。")]),t._v(" "),e("p",[t._v("目前，最大的公开仓库是官方提供的Docker Hub，其中存放着数量庞大的镜像供用户下载。国内不少云服务提供商（如腾讯云、阿里云等）也提供了仓库的本地源，可以提供稳定的国内访问。当然，用户如果不希望公开分享自己的镜像文件，Docker也支持用户在本地网络内创建一个只能自己访问的私有仓库。当用户创建了自己的镜像之后就可以使用push命令将它上传到指定的公有或者私有仓库。这样用户下次在另外一台机器上使用该镜像时，只需要将其从仓库上pull下来就可以了。")]),t._v(" "),e("h2",{attrs:{id:"docker的版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker的版本"}},[t._v("#")]),t._v(" Docker的版本")]),t._v(" "),e("p",[e("code",[t._v("Docker")]),t._v("分为社区版("),e("code",[t._v("CE")]),t._v(")和企业版("),e("code",[t._v("EE")]),t._v(")两个版本，社区版本包括大部分的核心功能，企业版本则通过付费形式提供认证支持、镜像管理、容器托管、安全扫描等高级服务。通常情况下，用户使用社区版本可以满足大部分需求；若有更苛刻的需求，可以购买企业版本服务。社区版本每个月会发布一次尝鲜（Edge）版本，每个季度（3、6、9、12月）会发行一次稳定（Stable）版本。版本号命名格式为“年份．月份”，如2018年6月发布的版本号为v18.06。")]),t._v(" "),e("h2",{attrs:{id:"centos-7平台安装docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#centos-7平台安装docker"}},[t._v("#")]),t._v(" Centos 7平台安装Docker")]),t._v(" "),e("p",[t._v("Docker支持多个平台，下面我们在"),e("code",[t._v("Centos 7")]),t._v("平台上安装Docker，具体安装步骤见链接："),e("a",{attrs:{href:"https://hangz007.gitee.io/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/Linux-practice.html#%E5%AE%89%E8%A3%85%E5%BA%94%E7%94%A8%E5%AE%B9%E5%99%A8%E5%BC%95%E6%93%8E-docker",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker安装"),e("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=c.exports}}]);