(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{697:function(t,a,n){"use strict";n.r(a);var s=n(74),o=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"spring-boot是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot是什么"}},[t._v("#")]),t._v(" Spring Boot是什么")]),t._v(" "),a("p",[t._v("Spring Boot 是 Spring 开源组织下的子项目，是 Spring 组件一站式解决方案，主要是简化了使用 Spring 的难度，简省了繁重的配置，提供了各种启动器，开发者能快速上手。")]),t._v(" "),a("h2",{attrs:{id:"spring-boot的优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot的优点"}},[t._v("#")]),t._v(" Spring Boot的优点")]),t._v(" "),a("ol",[a("li",[t._v("容易上手，提升开发效率，为 Spring 开发提供一个更快、更广泛的入门体验。")]),t._v(" "),a("li",[t._v("开箱即用，远离繁琐的配置。")]),t._v(" "),a("li",[t._v("提供了一系列大型项目通用的非业务性功能，例如：内嵌服务器、安全管理、运行数据监控、运行状况检查和外部化配置等。")]),t._v(" "),a("li",[t._v("没有代码生成，也不需要XML配置。")]),t._v(" "),a("li",[t._v("避免大量的 Maven 导入和各种版本冲突。")])]),t._v(" "),a("h2",{attrs:{id:"spring-boot自动配置原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot自动配置原理"}},[t._v("#")]),t._v(" Spring Boot自动配置原理")]),t._v(" "),a("p",[t._v("SpringBoot 项目的一切都要从 "),a("code",[t._v("@SpringBootApplication")]),t._v(" 这个注解开始说起。")]),t._v(" "),a("p",[a("code",[t._v("@SpringBootApplication")]),t._v(" 标注在某个类上说明：")]),t._v(" "),a("ul",[a("li",[t._v("这个类是 SpringBoot 的主配置类。")]),t._v(" "),a("li",[t._v("SpringBoot 就应该运行这个类的 main 方法来启动 SpringBoot 应用。")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootConfiguration")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableAutoConfiguration")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ComponentScan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \nexcludeFilters "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n  type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FilterType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CUSTOM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n  classes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeExcludeFilter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n    type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FilterType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CUSTOM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    classes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AutoConfigurationExcludeFilter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringBootApplication")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("可以看到"),a("code",[t._v("SpringBootApplication")]),t._v(" 注解是一个组合注解，其主要组合了一下三个注解：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("@SpringBootConfiguration")]),t._v("：该注解表示这是一个 Spring Boot 的配置类，其实它就是一个"),a("code",[t._v("@Configuration")]),t._v(" 注解而已。")]),t._v(" "),a("li",[a("code",[t._v("@ComponentScan")]),t._v("：开启组件扫描。")]),t._v(" "),a("li",[a("code",[t._v("@EnableAutoConfiguration")]),t._v("：从名字就可以看出来，就是这个类开启自动配置的。嗯，自动配置的奥秘全都在这个注解里面。")])]),t._v(" "),a("p",[t._v("先看该"),a("code",[t._v("@EnableAutoConfiguration")]),t._v("注解是怎么定义的 ，")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AutoConfigurationPackage")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AutoConfigurationImportSelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EnableAutoConfiguration")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("@AutoConfigurationPackage")]),t._v(" 注解就是将主配置类（@SpringBootConfiguration标注的类）的所在包及下面所有子包里面的所有组件扫描到Spring容器中。")]),t._v(" "),a("li",[a("code",[t._v("@Import({AutoConfigurationImportSelector.class})")]),t._v("该注解给当前配置类导入另外的 N 个自动配置类。")])]),t._v(" "),a("p",[t._v("进入类"),a("code",[t._v("AutoConfigurationImportSelector")]),t._v("，观察其"),a("code",[t._v("selectImports")]),t._v("方法，这个方法执行完毕后，Spring会把这个方法返回的类的全限定名数组里的所有的类都注入到IOC容器中。具体分析这个方法。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("第一行"),a("code",[t._v("if")]),t._v("时会首先判断当前系统是否禁用了自动装配的功能，如果当前系统禁用了自动装配的功能则会返回如下这个空的数组，后续也就无法注入bean了。")])]),t._v(" "),a("li",[a("p",[t._v("此时如果没有禁用自动装配则进入else分支，第一步操作首先会去加载所有Spring预先定义的配置条件信息，这些配置信息在"),a("code",[t._v("org.springframework.boot.autoconfigure")]),t._v("包下的"),a("code",[t._v("META-INF/spring-autoconfigure-metadata.properties")]),t._v("文件中。")])]),t._v(" "),a("li",[a("p",[t._v("这些配置条件主要含义大致是这样的：如果你要自动装配某个类的话，你觉得先存在哪些类或者哪些配置文件等等条件，这些条件的判断主要是利用了"),a("code",[t._v("@ConditionalXXX")]),t._v("注解。")])]),t._v(" "),a("li",[a("p",[t._v("获取"),a("code",[t._v("@EnableAutoConfiguration")]),t._v("注解上的"),a("code",[t._v("exclude")]),t._v("、"),a("code",[t._v("excludeName")]),t._v("属性，这两个属性的作用都是排除一些类的。")])]),t._v(" "),a("li",[a("p",[t._v("加载整个项目所有的"),a("code",[t._v("spring.factories")]),t._v("文件。")])]),t._v(" "),a("li",[a("p",[t._v("删除重复的自动配置类，去除我们指定排除的配置类。")])]),t._v(" "),a("li",[a("p",[t._v("根据加载的配置条件信息来判断各个配置类上的"),a("code",[t._v("@ConditionalXXX")]),t._v("系列注解是否满足需求。")])]),t._v(" "),a("li",[a("p",[t._v("最后就是发布自动装配完成事件，然后返回所有能够自动装配的类的全限定名。")])])])])}),[],!1,null,null,null);a.default=o.exports}}]);